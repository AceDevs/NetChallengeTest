// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetChallengeTestAPI.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NetChallengeTestAPI.Migrations;

[DbContext(typeof(DataContext))]
[Migration("20230919045720_initialMigration")]
partial class initialMigration
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "7.0.11")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("NetChallengeTest.Core.Models.Category", b =>
            {
                b.Property<int>("ID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                b.Property<int>("CategoryCode")
                    .HasColumnType("integer");

                b.Property<string>("CategoryName")
                    .HasColumnType("text");

                b.Property<DateTime>("CreationDate")
                    .HasColumnType("timestamp with time zone");

                b.HasKey("ID");

                b.ToTable("Categories");
            });

        modelBuilder.Entity("NetChallengeTest.Core.Models.Product", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<int>("CategoryId")
                    .HasColumnType("integer");

                b.Property<DateTime>("CreationDate")
                    .HasColumnType("timestamp with time zone");

                b.Property<string>("ProductCode")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("ProductName")
                    .IsRequired()
                    .HasColumnType("text");

                b.HasKey("Id");

                b.HasIndex("CategoryId");

                b.ToTable("Products");
            });

        modelBuilder.Entity("NetChallengeTest.Core.Models.Product", b =>
            {
                b.HasOne("NetChallengeTest.Core.Models.Category", "Category")
                    .WithMany("Products")
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Category");
            });

        modelBuilder.Entity("NetChallengeTest.Core.Models.Category", b =>
            {
                b.Navigation("Products");
            });
#pragma warning restore 612, 618
    }
}
